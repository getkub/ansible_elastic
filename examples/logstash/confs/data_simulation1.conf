input {
  generator {
    message => [
      "Sample log message 1 with a timestamp yyyy/mm/dd",
      "Another log message 2 with a different timestamp yy/mm/dd",
      "Yet another log message 3 with another timestamp format yyyy-MMM-dd",
      "Log message 4 with a timestamp yyyy/MM/dd",
      "Log message 5 with a timestamp yy/MM/dd",
      "Log message 6 with a timestamp yyyy/MMM/dd",
      "Log message 7 with a timestamp yy/MMM/dd",
      "Log message 8 with a timestamp yyyy/M/d",
      "Log message 9 with a timestamp yy/M/d",
      "Log message 10 with a timestamp yyyy-mm-dd",
      "Log message 11 with a timestamp yy-mm-dd",
      "Log message 12 with a timestamp yyyy-MMM-dd",
      "Log message 13 with a timestamp yy-MMM-dd",
      "Log message 14 with a timestamp yyyy-m-d",
      "Log message 15 with a timestamp yy-m-d",
      # Add more sample log messages as needed
    ]
    count => 1  # Number of times to generate each message (adjust as needed)
  }
}

filter {
  # Define an array of timestamp regex patterns and their corresponding replacement values
  ruby {
    code => '
      # Define an array of regex patterns and replacement values
      patterns = [
        { "pattern" => "\\d{4}/\\d{2}/\\d{2}", "replacement" => "REPLACED_TIMESTAMP1" }, # yyyy/mm/dd
        { "pattern" => "\\d{2}/\\d{2}/\\d{2}", "replacement" => "REPLACED_TIMESTAMP2" }, # yy/mm/dd
        { "pattern" => "\\d{4}/[A-Za-z]{3}/\\d{2}", "replacement" => "REPLACED_TIMESTAMP3" }, # yyyy/MMM/dd
        { "pattern" => "\\d{2}/[A-Za-z]{3}/\\d{2}", "replacement" => "REPLACED_TIMESTAMP4" }, # yy/MMM/dd
        { "pattern" => "\\d{4}/\\d{1}/\\d{1}", "replacement" => "REPLACED_TIMESTAMP5" }, # yyyy/M/d
        { "pattern" => "\\d{2}/\\d{1}/\\d{1}", "replacement" => "REPLACED_TIMESTAMP6" }, # yy/M/d
        { "pattern" => "\\d{4}-\\d{2}-\\d{2}", "replacement" => "REPLACED_TIMESTAMP7" }, # yyyy-mm-dd
        { "pattern" => "\\d{2}-\\d{2}-\\d{2}", "replacement" => "REPLACED_TIMESTAMP8" }, # yy-mm-dd
        { "pattern" => "\\d{4}-[A-Za-z]{3}-\\d{2}", "replacement" => "REPLACED_TIMESTAMP9" }, # yyyy-MMM-dd
        { "pattern" => "\\d{2}-[A-Za-z]{3}-\\d{2}", "replacement" => "REPLACED_TIMESTAMP10" }, # yy-MMM-dd
        { "pattern" => "\\d{4}-\\d{1}-\\d{1}", "replacement" => "REPLACED_TIMESTAMP11" }, # yyyy-m-d
        { "pattern" => "\\d{2}-\\d{1}-\\d{1}", "replacement" => "REPLACED_TIMESTAMP12" }, # yy-m-d
        # Add more patterns as needed
      ]

      # Iterate through the patterns and apply gsub for each
      patterns.each do |pattern|
        event.set("message", event.get("message").gsub(/#{pattern["pattern"]}/, pattern["replacement"]))
      end
    '
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "your_index_name"
  }
}
