Function,Description,Splunk SPL Example,ESQL Equivalent Status,ESQL Example/Workaround,Notes
summaryindex,"Creates summary data and stores it in a summary index for faster searches","| summaryindex spool=f index=summary_idx | stats count by host","Not Available","Use Transform API or Ingest Pipelines","ESQL doesn't have summary indexes; use Elasticsearch's transform feature or ingest pipelines for pre-aggregation"
join,"Combines results from two searches based on common fields","search index=web | join sessionid [search index=app | fields sessionid, userid]","Not Available","Use multiple FROM clauses with WHERE conditions","ESQL doesn't support JOIN yet; workaround with multiple queries or use regular Elasticsearch queries with terms lookup"
inlinestats/eventstats,"Adds statistical information to each event without changing the number of events","| eventstats avg(response_time) as avg_resp by host","Partial Support","FROM logs | STATS avg_resp = AVG(response_time) BY host | EVAL ...","ESQL STATS groups data; for inline stats, need separate aggregation query or use regular ES aggregations"
jq/json parser,"Extracts and manipulates JSON data within events","| eval parsed=spath(_raw, ""data.user.name"")","Available","FROM logs | EVAL parsed = _raw.data.user.name","ESQL has native JSON field access using dot notation"
macros/functions,"Reusable search fragments defined as macros","``get_failed_logins(index, timeframe)``","Not Available","Create saved queries or use Elasticsearch templates","ESQL doesn't support macros; use saved queries, Elasticsearch query templates, or application-level abstraction"
append,"Appends results from a second search to the first","search index=errors | append [search index=warnings]","Not Available","Use UNION in future versions or multiple queries","ESQL doesn't support APPEND yet; combine at application level or wait for UNION support"
transaction,"Groups events into transactions based on common fields and time proximity","| transaction sessionid startswith=""login"" endswith=""logout"" maxspan=30m","Limited Support","Use EQL sequence queries for time-based event correlation","Use EQL sequence queries for transaction-like behavior, but not as flexible as Splunk's transaction command"
inputlookup/lookupfile,"Loads data from external CSV files or lookup tables","| inputlookup users.csv | where active=""true""","Not Available","Use Elasticsearch indices or enrich policies","Load CSV data into Elasticsearch indices or use enrich processor in ingest pipelines"
subsearch,"Performs a search within another search","search index=web NOT [search index=blocked_ips | fields ip]","Not Available","Use multiple queries with application logic","ESQL doesn't support subsearches; implement with multiple queries and application-level logic"
eval (complex),"Complex field calculations and manipulations","| eval risk_score=case(severity=""high"", 10, severity=""med"", 5, 1)","Available","FROM logs | EVAL risk_score = CASE(severity == ""high"", 10, severity == ""med"", 5, 1)","ESQL supports EVAL with CASE statements and many functions"
where (complex),"Complex filtering with statistical functions","| where response_time > (avg(response_time) * 2)","Partial Support","Requires separate STATS query first","Complex WHERE conditions with aggregations need to be broken into multiple queries"
fillnull,"Replaces null values with specified values","| fillnull value=0 count, value=""unknown"" user","Available","FROM logs | EVAL count = COALESCE(count, 0), user = COALESCE(user, ""unknown"")","Use COALESCE function in ESQL"
rex,"Extracts fields using regular expressions","| rex field=_raw ""(?<ip>\d+\.\d+\.\d+\.\d+)""","Available","FROM logs | GROK _raw ""%{IP:ip}""","Use GROK or DISSECT functions in ESQL"
bucket/bin,"Groups numerical values into bins","| bucket response_time span=100","Available","FROM logs | EVAL time_bucket = response_time - response_time % 100","Use mathematical operations or DATE_TRUNC for time buckets"
sort,"Sorts results by specified fields","| sort -response_time, +timestamp","Available","FROM logs | SORT response_time DESC, timestamp ASC","ESQL supports SORT with ASC/DESC"
head/tail,"Limits results to first or last N events","| head 100 | tail 10","Available","FROM logs | LIMIT 100 | ... (no direct tail equivalent)","ESQL has LIMIT but no direct tail equivalent"
dedup,"Removes duplicate events based on specified fields","| dedup user, ip","Not Available","Use STATS with arbitrary selection","No direct dedup; use STATS with functions like ANY() or MAX() to get unique combinations"
timechart,"Creates time-series charts with statistical aggregations","| timechart span=1h count by status","Available","FROM logs | EVAL hour = DATE_TRUNC(1 hour, @timestamp) | STATS count = COUNT(*) BY hour, status","Use DATE_TRUNC with STATS for time-based aggregations"
alert_actions,"Triggers alert actions like email, webhook, or custom notifications directly from search pipeline","| alert_actions email ""to=admin@company.com subject='Alert' message='High CPU detected'""","Not Available","Use Elasticsearch Watcher or Kibana Alerting","ESQL doesn't support inline alert actions; use Watcher API, Kibana alerting rules, or external alerting systems"
alert_actions (webhook),"Sends HTTP requests to external APIs as part of search pipeline","| alert_actions webhook ""url=https://api.slack.com/webhook token=xyz channel=#alerts""","Not Available","Use Elasticsearch Watcher webhook action or external processing","Configure webhook actions in Watcher or process ESQL results in application layer to trigger webhooks"